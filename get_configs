#!/usr/bin/env python

import os
import json
import csv
from collections import abc
import sys
import pprint

path = sys.argv[1] if len(sys.argv) > 1 else "../"
path = os.path.abspath(path)

configs = {}


def flatten(d, parent_key='', sep='_'):
    items = []
    for k, v in d.items():
        new_key = parent_key + sep + k if parent_key else k
        if isinstance(v, abc.MutableMapping):
            items.extend(flatten(v, new_key, sep=sep).items())
        else:
            items.append((new_key, v))
    return dict(items)


def get_config(directory, confighash):

    if confighash not in configs:
        configpath = os.path.join(directory, "config.json")

        with open(configpath, "r") as configfile:
            config = json.load(configfile)

        configs[confighash] = flatten(config)

    return configs[confighash]


def get_configs(directory):

    headers = set(["fold", "class"])
    for root, dirs, files in os.walk(directory):

        relpath = root.replace(directory, "")[1:]

        if "config.json" in files:
            confighash = relpath.split("/")[1]
            get_config(root, confighash)
    return configs


if __name__ == "__main__":
    pprint.pprint(get_configs(path))
